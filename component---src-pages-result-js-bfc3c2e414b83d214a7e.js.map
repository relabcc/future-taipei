{"version":3,"sources":["webpack:///./src/pages/result.js","webpack:///./src/components/Text.js","webpack:///./src/components/Container.js","webpack:///./src/stores/withQuestions.js"],"names":["Result","state","getDerivedStateFromProps","nextProps","scores","answers","reduce","group","forEach","key","index","render","this","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Container__WEBPACK_IMPORTED_MODULE_7__","py","_components_Text__WEBPACK_IMPORTED_MODULE_8__","h1","_components_Box__WEBPACK_IMPORTED_MODULE_9__","react_donut_chart__WEBPACK_IMPORTED_MODULE_5___default","data","map","value","label","topics","title","PureComponent","withQuestions","Text","styled","tag","withConfig","displayName","componentId","display","fontSize","space","color","textAlign","fontWeight","fontFamily","lineHeight","letterSpacing","position","injectProps","defaultProps","is","blacklist","inline","props","react__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","bold","thin","dosis","range","h","styled_system__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","styled_components__WEBPACK_IMPORTED_MODULE_1__","_Box__WEBPACK_IMPORTED_MODULE_2__","_ThemeProvider_theme__WEBPACK_IMPORTED_MODULE_3__","Container","Box","maxWidth","mx","px","width","containerWidth","redux__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_questionsReducer__WEBPACK_IMPORTED_MODULE_2__","connect","questions","getIn","dispatch","bindActionCreators","setSort"],"mappings":"0OAYMA,sJAaJC,MAAQ,uBAZDC,kCAAyBC,GAC9B,MAAO,CACLC,OAAQD,EAAUE,QAAQC,OAAO,SAACF,EAAQG,GAKxC,OAJAA,EAAMC,QAAQ,SAACC,EAAKC,GAClBN,EAAOK,GAAOL,EAAOK,IAAQ,EAC7BL,EAAOK,IAAQ,EAAIC,IAEdN,GACN,kBAMPO,kBAAS,IACCP,EAAWQ,KAAKX,MAAhBG,OACR,OACES,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,GAAG,OACZJ,EAAAC,EAAAC,cAACG,EAAA,EAAKC,GAAN,aACAN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACAQ,KAAMC,IAAInB,EAAQ,SAACoB,EAAOf,GAAR,MAAiB,CACjCgB,MAAOC,IAAOjB,GAAKkB,MACnBH,mBAxBSI,iBAiCNC,sBAAc7B,gJCzBvB8B,EAAOC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGJ,CAAH,iFAGNK,UACAC,WACAC,QACAC,QACAC,YACAC,aACAC,aACAC,aACAC,gBACAC,WACAC,YAAY,iBACZA,YAAY,kBAGhBhB,EAAKiB,aAAe,CAClBC,GAAI,IACJX,SAAU,MACVM,WAAY,IACZM,eAGFnB,EAAKoB,OAAS,SAACC,GAAD,OAAWC,EAAAtC,EAAAC,cAACe,EAADuB,OAAAC,OAAA,CAAMN,GAAG,QAAWG,KAC7CrB,EAAKyB,KAAO,SAACJ,GAAD,OAAWC,EAAAtC,EAAAC,cAACe,EAADuB,OAAAC,OAAA,CAAMb,WAAW,QAAWU,KACnDrB,EAAK0B,KAAO,SAACL,GAAD,OAAWC,EAAAtC,EAAAC,cAACe,EAADuB,OAAAC,OAAA,CAAMb,WAAW,OAAUU,KAClDrB,EAAK2B,MAAQ,SAACN,GAAD,OAAWC,EAAAtC,EAAAC,cAACe,EAADuB,OAAAC,OAAA,CAAMZ,WAAW,SAAYS,KAErDO,IAAM,EAAG,GAAGlD,QAAQ,SAACC,GACnB,IAAMkD,EAAC,IAAOlD,EACdqB,EAAK6B,GAAK,SAACR,GAAD,OACRC,EAAAtC,EAAAC,cAACe,EAADuB,OAAAC,OAAA,CACEN,GAAIW,EACJtB,SAAa,EAAiB,MAAX,EAAI5B,GAAf,MACJ0C,OAKKrB,wCC5Df,IAAA8B,EAAAC,EAAA,GAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAA,KAAAG,EAAAH,EAAA,IAMMI,EAAYlC,YAAOmC,KAAVjC,WAAA,CAAAC,YAAA,YAAAC,YAAA,YAAGJ,CAAH,QACXoC,YAGJF,EAAUlB,aAAe,CACvBqB,GAAI,OACJC,GAAI,CAAC,MAAO,KAAM,OAClBC,MAAO,EACPH,SAAUI,KAGGN,wCCjBf,IAAAO,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAcec,gBATS,SAAC1E,GAAD,MAAY,CAClC2E,UAAW3E,EAAM4E,MAAM,CAAC,YAAa,cACrCxE,QAASJ,EAAM4E,MAAM,CAAC,YAAa,cAGV,SAACC,GAAD,OAAcC,YAAmB,CAC1DC,aACCF","file":"component---src-pages-result-js-bfc3c2e414b83d214a7e.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport DonutChart from 'react-donut-chart';\nimport map from 'lodash/map';\n\nimport Container from '../components/Container';\nimport Text from '../components/Text';\nimport Box from '../components/Box';\n\nimport withQuestions from '../stores/withQuestions';\n\nimport topics from '../topics';\n\nclass Result extends PureComponent {\n  static getDerivedStateFromProps(nextProps) {\n    return {\n      scores: nextProps.answers.reduce((scores, group) => {\n        group.forEach((key, index) => {\n          scores[key] = scores[key] || 0;\n          scores[key] += 3 - index;\n        });\n        return scores;\n      }, {}),\n    };\n  }\n\n  state = {}\n\n  render() {\n    const { scores } = this.state;\n    return (\n      <Container py=\"2em\">\n        <Text.h1>你的結果</Text.h1>\n        <Box>\n          <DonutChart\n          data={map(scores, (value, key) => ({\n            label: topics[key].title,\n            value,\n          }))}\n          />\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default withQuestions(Result);\n","import React from 'react';\nimport styled from 'styled-components';\nimport range from 'lodash/range';\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  color,\n  display,\n  textAlign,\n  position,\n  letterSpacing,\n  fontFamily,\n} from 'styled-system';\nimport tag from 'clean-tag';\n\nimport blacklist from './utils/blacklist';\nimport injectProps from './utils/injectProps';\n\nconst Text = styled(tag)`\n  margin-top: 0;\n  margin-bottom: 0;\n  ${display}\n  ${fontSize}\n  ${space}\n  ${color}\n  ${textAlign}\n  ${fontWeight}\n  ${fontFamily}\n  ${lineHeight}\n  ${letterSpacing}\n  ${position}\n  ${injectProps('verticalAlign')}\n  ${injectProps('textTransform')}\n`;\n\nText.defaultProps = {\n  is: 'p',\n  fontSize: '1em',\n  lineHeight: 1.5,\n  blacklist,\n};\n\nText.inline = (props) => <Text is=\"span\" {...props} />;\nText.bold = (props) => <Text fontWeight=\"bold\" {...props} />;\nText.thin = (props) => <Text fontWeight=\"200\" {...props} />;\nText.dosis = (props) => <Text fontFamily=\"Dosis\" {...props} />;\n\nrange(1, 7).forEach((key) => {\n  const h = `h${key}`;\n  Text[h] = (props) => (\n    <Text\n      is={h}\n      fontSize={`${1 + ((6 - key) * 0.125)}em`}\n      {...props}\n    />\n  );\n});\n\nexport default Text;\n","import { maxWidth } from 'styled-system';\nimport styled from 'styled-components';\n\nimport Box from './Box';\nimport { containerWidth } from './ThemeProvider/theme';\n\nconst Container = styled(Box)`\n  ${maxWidth}\n`;\n\nContainer.defaultProps = {\n  mx: 'auto',\n  px: ['1em', null, '2em'],\n  width: 1,\n  maxWidth: containerWidth,\n};\n\nexport default Container;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { setSort } from './questionsReducer';\n\nconst mapStateToProps = (state) => ({\n  questions: state.getIn(['questions', 'questions']),\n  answers: state.getIn(['questions', 'answers']),\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  setSort,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps);\n"],"sourceRoot":""}